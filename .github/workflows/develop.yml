name: dev-pipeline

on:
  push:
    branches:
      - 'dev'
jobs:
    test:
      runs-on: ubuntu-latest
      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Set up .NET Core
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 6
        
        - name: Install dependencies
          run: dotnet restore AuthService/AuthService.sln
        
        - name: xUnit tests
          run: dotnet test AuthService/AuthService.sln
    docker:
        runs-on: ubuntu-latest
        needs: test
        outputs:
          version: ${{ steps.increment-patch-version.outputs.version }}
        steps:
          - name: Check out code
            uses: actions/checkout@v4
          -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v3
          -
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          -
            name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - 
            name: Read current version
            id: read-version
            run: echo "::set-output name=version::$(cat version.txt)"
          
          - 
            name: Increment patch version
            id: increment-patch-version
            run: echo "::set-output name=version::$(echo ${{ steps.read-version.outputs.version }} | awk -F. '{$3=$3+1; print $0}' OFS=.)"
              
          - 
            name: Write new version
            run: echo "${{ steps.increment-patch-version.outputs.version }}" > version.txt
        
          - 
            name: Set variable
            id: set_var
            run: echo "version=${{ steps.increment-patch-version.outputs.version }}" >> $GITHUB_ENV
          -
            name: Build and push authorization-service
            uses: docker/build-push-action@v5
            with:
              context: ./AuthService/AuthService
              push: true
              platforms: linux/amd64,linux/arm64
              tags: |
                zanzibarinh/authorization-service:latest
                zanzibarinh/authorization-service:${{ steps.increment-patch-version.outputs.version }}
    deploy:
        runs-on: ubuntu-latest
        needs: docker
        steps:
          - name: Check out code
            uses: actions/checkout@v4
    
          - name: Set up OpenShift CLI
            uses: redhat-actions/oc-login@v1
            with:
              openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
              openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
              insecure_skip_tls_verify: true
              namespace: kawa-foundation-app-dev

          - name: Set up Helm
            uses: azure/setup-helm@v3
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Deploy with Helm
            run: |
                helm upgrade --install authentication-service --set version=--set version=${{needs.docker.outputs.version}} ./charts



